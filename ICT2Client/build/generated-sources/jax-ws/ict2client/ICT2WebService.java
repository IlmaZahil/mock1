
package ict2client;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ICT2WebService", targetNamespace = "http://server/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ICT2WebService {


    /**
     * 
     * @param x
     * @param y
     * @return
     *     returns java.lang.Double
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "divide", targetNamespace = "http://server/", className = "ict2client.Divide")
    @ResponseWrapper(localName = "divideResponse", targetNamespace = "http://server/", className = "ict2client.DivideResponse")
    @Action(input = "http://server/ICT2WebService/divideRequest", output = "http://server/ICT2WebService/divideResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://server/ICT2WebService/divide/Fault/Exception")
    })
    public Double divide(
        @WebParam(name = "x", targetNamespace = "")
        Double x,
        @WebParam(name = "y", targetNamespace = "")
        Double y)
        throws Exception_Exception
    ;

    /**
     * 
     * @param x
     * @param y
     * @return
     *     returns java.lang.Double
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "safeDivide", targetNamespace = "http://server/", className = "ict2client.SafeDivide")
    @ResponseWrapper(localName = "safeDivideResponse", targetNamespace = "http://server/", className = "ict2client.SafeDivideResponse")
    @Action(input = "http://server/ICT2WebService/safeDivideRequest", output = "http://server/ICT2WebService/safeDivideResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://server/ICT2WebService/safeDivide/Fault/Exception")
    })
    public Double safeDivide(
        @WebParam(name = "x", targetNamespace = "")
        Double x,
        @WebParam(name = "y", targetNamespace = "")
        Double y)
        throws Exception_Exception
    ;

    /**
     * 
     * @param name
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "hello", targetNamespace = "http://server/", className = "ict2client.Hello")
    @ResponseWrapper(localName = "helloResponse", targetNamespace = "http://server/", className = "ict2client.HelloResponse")
    @Action(input = "http://server/ICT2WebService/helloRequest", output = "http://server/ICT2WebService/helloResponse")
    public String hello(
        @WebParam(name = "name", targetNamespace = "")
        String name);

    /**
     * 
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "isConnected", targetNamespace = "http://server/", className = "ict2client.IsConnected")
    @ResponseWrapper(localName = "isConnectedResponse", targetNamespace = "http://server/", className = "ict2client.IsConnectedResponse")
    @Action(input = "http://server/ICT2WebService/isConnectedRequest", output = "http://server/ICT2WebService/isConnectedResponse")
    public int isConnected();

    /**
     * 
     * @return
     *     returns java.lang.Double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getLargestDoubleOnServer", targetNamespace = "http://server/", className = "ict2client.GetLargestDoubleOnServer")
    @ResponseWrapper(localName = "getLargestDoubleOnServerResponse", targetNamespace = "http://server/", className = "ict2client.GetLargestDoubleOnServerResponse")
    @Action(input = "http://server/ICT2WebService/getLargestDoubleOnServerRequest", output = "http://server/ICT2WebService/getLargestDoubleOnServerResponse")
    public Double getLargestDoubleOnServer();

    /**
     * 
     * @param x
     * @param y
     * @return
     *     returns java.lang.Double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addDoubleOnServer", targetNamespace = "http://server/", className = "ict2client.AddDoubleOnServer")
    @ResponseWrapper(localName = "addDoubleOnServerResponse", targetNamespace = "http://server/", className = "ict2client.AddDoubleOnServerResponse")
    @Action(input = "http://server/ICT2WebService/addDoubleOnServerRequest", output = "http://server/ICT2WebService/addDoubleOnServerResponse")
    public Double addDoubleOnServer(
        @WebParam(name = "x", targetNamespace = "")
        Double x,
        @WebParam(name = "y", targetNamespace = "")
        Double y);

}
